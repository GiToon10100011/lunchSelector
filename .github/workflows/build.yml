name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build Next.js app
        run: npm run export

      - name: Build Electron app (macOS)
        if: matrix.os == 'macos-latest'
        run: npx electron-builder --mac --publish=never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_cache: .npm
          ELECTRON_BUILDER_CACHE: .cache

      - name: Build Electron app (Windows)
        if: matrix.os == 'windows-latest'
        run: npx electron-builder --win --publish=never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
          npm_config_cache: .npm
          ELECTRON_BUILDER_CACHE: .cache

      - name: Build Electron app (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npx electron-builder --linux --publish=never
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          npm_config_cache: .npm
          ELECTRON_BUILDER_CACHE: .cache

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}